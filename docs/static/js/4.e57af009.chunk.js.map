{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/css/cssMode.js","../node_modules/monaco-editor/esm/vs/language/css/workerManager.js","../node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js"],"names":["Object","defineProperty","__webpack_exports__","value","defaults","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","first","more","_i","arguments","length","getLanguageServiceWorker","apply","concat","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerRenameProvider","registerColorProvider","registerFoldingRangeProvider","__webpack_require__","d","WorkerManager","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","createData","languageSettings","diagnosticsOptions","getProxy","resources","then","_","withSyncedResources","DiagnosticsAdapter","CompletionAdapter","HoverAdapter","DocumentHighlightAdapter","DefinitionAdapter","ReferenceAdapter","RenameAdapter","DocumentSymbolAdapter","DocumentColorAdapter","FoldingRangeAdapter","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Uri","Range","_languageId","_disposables","_listener","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","getModels","forEach","key","resource","doValidation","diagnostics","markers","map","diag","code","String","severity","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","toDiagnostics","getModel","undefined","err","console","error","fromPosition","position","column","lineNumber","toRange","toTextEdit","textEdit","text","newText","get","enumerable","configurable","provideCompletionItems","context","token","doComplete","info","wordInfo","getWordUntilPosition","wordRange","items","entry","item","insertText","sortText","filterText","documentation","detail","kind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toCompletionItemKind","additionalTextEdits","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","isIncomplete","suggestions","toMarkdownString","thing","isMarkupContent","replace","language","provideHover","doHover","contents","Array","isArray","toMarkedStringArray","provideDocumentHighlights","findDocumentHighlights","entries","Read","DocumentHighlightKind","Write","toDocumentHighlightKind","toLocation","location","parse","provideDefinition","findDefinition","definition","provideReferences","findReferences","provideRenameEdits","newName","doRename","edit","changes","resourceEdits","edits","_a","e","toWorkspaceEdit","provideDocumentSymbols","findDocumentSymbols","name","containerName","mKind","SymbolKind","Namespace","Package","Constant","Number","Boolean","toSymbolKind","selectionRange","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","fromRange","presentations","presentation","provideFoldingRanges","ranges","result","startLine","endLine","Comment","FoldingRangeKind","Imports","Region","toFoldingRangeKind","Position","Location","LocationLink","ColorInformation","ColorPresentation","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","InsertTextFormat","is","candidate","Is","objectLiteral","number","one","two","three","four","defined","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","typedArray","startCharacter","endCharacter","relatedInformation","title","command","args","insert","del","textDocument","VersionedTextDocumentIdentifier","options","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolInformation","TextEditChangeImpl","delete","add","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","textEditChange","keys","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","version","PlainText","Markdown","Folder","EnumMember","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","parameters","Key","Null","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","children","deprecated","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check"],"mappings":"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","file":"static/js/4.e57af009.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function (first) {\n        var more = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            more[_i - 1] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n    };\n    var languageId = defaults.languageId;\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerDefinitionProvider(languageId, new languageFeatures.DefinitionAdapter(worker));\n    monaco.languages.registerReferenceProvider(languageId, new languageFeatures.ReferenceAdapter(worker));\n    monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\n    monaco.languages.registerRenameProvider(languageId, new languageFeatures.RenameAdapter(worker));\n    monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker));\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\n    new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/cssMode.js\n// module id = 1055\n// module chunks = 4","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `CSSWorker` instance\n                moduleId: 'vs/language/css/cssWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; });\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/workerManager.js\n// module id = 1117\n// module chunks = 4","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        });\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString());\n        }).then(function (diagnostics) {\n            var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n            var model = monaco.editor.getModel(resource);\n            if (model.getModeId() === languageId) {\n                monaco.editor.setModelMarkers(model, languageId, markers);\n            }\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new monaco.Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var wordInfo = model.getWordUntilPosition(position);\n            var wordRange = new Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText || entry.label,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    range: wordRange,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                suggestions: items\n            };\n        });\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        });\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- document highlights ------\nfunction toDocumentHighlightKind(kind) {\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return monaco.languages.DocumentHighlightKind.Read;\n        case ls.DocumentHighlightKind.Write: return monaco.languages.DocumentHighlightKind.Write;\n        case ls.DocumentHighlightKind.Text: return monaco.languages.DocumentHighlightKind.Text;\n    }\n    return monaco.languages.DocumentHighlightKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.findDocumentHighlights(resource.toString(), fromPosition(position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(function (entry) {\n                return {\n                    range: toRange(entry.range),\n                    kind: toDocumentHighlightKind(entry.kind)\n                };\n            });\n        });\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\nvar DefinitionAdapter = /** @class */ (function () {\n    function DefinitionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.findDefinition(resource.toString(), fromPosition(position));\n        }).then(function (definition) {\n            if (!definition) {\n                return;\n            }\n            return [toLocation(definition)];\n        });\n    };\n    return DefinitionAdapter;\n}());\nexport { DefinitionAdapter };\n// --- references ------\nvar ReferenceAdapter = /** @class */ (function () {\n    function ReferenceAdapter(_worker) {\n        this._worker = _worker;\n    }\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.findReferences(resource.toString(), fromPosition(position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(toLocation);\n        });\n    };\n    return ReferenceAdapter;\n}());\nexport { ReferenceAdapter };\n// --- rename ------\nfunction toWorkspaceEdit(edit) {\n    if (!edit || !edit.changes) {\n        return void 0;\n    }\n    var resourceEdits = [];\n    for (var uri in edit.changes) {\n        var edits = [];\n        for (var _i = 0, _a = edit.changes[uri]; _i < _a.length; _i++) {\n            var e = _a[_i];\n            edits.push({\n                range: toRange(e.range),\n                text: e.newText\n            });\n        }\n        resourceEdits.push({ resource: Uri.parse(uri), edits: edits });\n    }\n    return {\n        edits: resourceEdits\n    };\n}\nvar RenameAdapter = /** @class */ (function () {\n    function RenameAdapter(_worker) {\n        this._worker = _worker;\n    }\n    RenameAdapter.prototype.provideRenameEdits = function (model, position, newName, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doRename(resource.toString(), fromPosition(position), newName);\n        }).then(function (edit) {\n            return toWorkspaceEdit(edit);\n        });\n    };\n    return RenameAdapter;\n}());\nexport { RenameAdapter };\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        });\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        });\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        });\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        });\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js\n// module id = 1118\n// module chunks = 4","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\n// module id = 1119\n// module chunks = 4"],"sourceRoot":""}