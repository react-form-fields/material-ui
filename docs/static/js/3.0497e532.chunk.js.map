{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/css/cssMode.js","../node_modules/monaco-editor/esm/vs/language/css/workerManager.js","../node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js"],"names":["defaults","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","first","more","_i","arguments","length","getLanguageServiceWorker","apply","concat","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerRenameProvider","registerColorProvider","registerFoldingRangeProvider","__webpack_require__","d","__webpack_exports__","WorkerManager","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","createData","languageSettings","diagnosticsOptions","getProxy","resources","then","_","withSyncedResources","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Uri","DiagnosticsAdapter","_languageId","_disposables","_listener","Object","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","getModels","forEach","key","resource","doValidation","diagnostics","markers","map","diag","code","String","severity","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","toDiagnostics","getModel","undefined","err","console","error","fromPosition","position","column","lineNumber","toRange","Range","toTextEdit","textEdit","text","newText","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","context","token","getWordUntilPosition","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","kind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toCompletionItemKind","additionalTextEdits","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","isIncomplete","suggestions","toMarkdownString","value","thing","isMarkupContent","replace","language","HoverAdapter","provideHover","doHover","contents","Array","isArray","toMarkedStringArray","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","entries","Read","DocumentHighlightKind","Write","toDocumentHighlightKind","toLocation","location","parse","DefinitionAdapter","provideDefinition","findDefinition","definition","ReferenceAdapter","provideReferences","findReferences","RenameAdapter","provideRenameEdits","newName","doRename","edit","changes","resourceEdits","edits","_a","e","toWorkspaceEdit","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","name","containerName","mKind","SymbolKind","Namespace","Package","Constant","Number","Boolean","toSymbolKind","selectionRange","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","fromRange","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","ranges","result","startLine","endLine","Comment","FoldingRangeKind","Imports","Region","toFoldingRangeKind","Position","Location","ColorInformation","ColorPresentation","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","is","candidate","Is","objectLiteral","number","one","two","three","four","defined","string","red","green","blue","alpha","typedArray","startCharacter","endCharacter","relatedInformation","title","command","args","insert","del","textDocument","VersionedTextDocumentIdentifier","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolInformation","TextEditChangeImpl","delete","add","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","textDocumentEdit","textEditChange","keys","getTextEditChange","version","PlainText","Markdown","Folder","EnumMember","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","parameters","Key","Null","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","children","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check","every"],"mappings":"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","file":"static/js/3.0497e532.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { WorkerManager } from './workerManager.js';\r\nimport * as languageFeatures from './languageFeatures.js';\r\nexport function setupMode(defaults) {\r\n    var client = new WorkerManager(defaults);\r\n    var worker = function (first) {\r\n        var more = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            more[_i - 1] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\r\n    };\r\n    var languageId = defaults.languageId;\r\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\r\n    monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\r\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\r\n    monaco.languages.registerDefinitionProvider(languageId, new languageFeatures.DefinitionAdapter(worker));\r\n    monaco.languages.registerReferenceProvider(languageId, new languageFeatures.ReferenceAdapter(worker));\r\n    monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\r\n    monaco.languages.registerRenameProvider(languageId, new languageFeatures.RenameAdapter(worker));\r\n    monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker));\r\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\r\n    new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/cssMode.js\n// module id = 1815\n// module chunks = 3","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(defaults) {\r\n        var _this = this;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `CSSWorker` instance\r\n                moduleId: 'vs/language/css/cssWorker',\r\n                label: this._defaults.languageId,\r\n                // passed in to the create() method\r\n                createData: {\r\n                    languageSettings: this._defaults.diagnosticsOptions,\r\n                    languageId: this._defaults.languageId\r\n                }\r\n            });\r\n            this._client = this._worker.getProxy();\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\nexport { WorkerManager };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/workerManager.js\n// module id = 1870\n// module chunks = 3","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\r\nvar Uri = monaco.Uri;\r\n// --- diagnostics --- ---\r\nvar DiagnosticsAdapter = /** @class */ (function () {\r\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\r\n        var _this = this;\r\n        this._languageId = _languageId;\r\n        this._worker = _worker;\r\n        this._disposables = [];\r\n        this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            var modeId = model.getModeId();\r\n            if (modeId !== _this._languageId) {\r\n                return;\r\n            }\r\n            var handle;\r\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\r\n            });\r\n            _this._doValidate(model.uri, modeId);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\r\n            var uriStr = model.uri.toString();\r\n            var listener = _this._listener[uriStr];\r\n            if (listener) {\r\n                listener.dispose();\r\n                delete _this._listener[uriStr];\r\n            }\r\n        };\r\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\r\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n        }));\r\n        defaults.onDidChange(function (_) {\r\n            monaco.editor.getModels().forEach(function (model) {\r\n                if (model.getModeId() === _this._languageId) {\r\n                    onModelRemoved(model);\r\n                    onModelAdd(model);\r\n                }\r\n            });\r\n        });\r\n        this._disposables.push({\r\n            dispose: function () {\r\n                for (var key in _this._listener) {\r\n                    _this._listener[key].dispose();\r\n                }\r\n            }\r\n        });\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n    }\r\n    DiagnosticsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\r\n        this._worker(resource).then(function (worker) {\r\n            return worker.doValidation(resource.toString());\r\n        }).then(function (diagnostics) {\r\n            var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\r\n            var model = monaco.editor.getModel(resource);\r\n            if (model.getModeId() === languageId) {\r\n                monaco.editor.setModelMarkers(model, languageId, markers);\r\n            }\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    return DiagnosticsAdapter;\r\n}());\r\nexport { DiagnosticsAdapter };\r\nfunction toSeverity(lsSeverity) {\r\n    switch (lsSeverity) {\r\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\r\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\r\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\r\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\r\n        default:\r\n            return monaco.MarkerSeverity.Info;\r\n    }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\r\n    return {\r\n        severity: toSeverity(diag.severity),\r\n        startLineNumber: diag.range.start.line + 1,\r\n        startColumn: diag.range.start.character + 1,\r\n        endLineNumber: diag.range.end.line + 1,\r\n        endColumn: diag.range.end.character + 1,\r\n        message: diag.message,\r\n        code: code,\r\n        source: diag.source\r\n    };\r\n}\r\n// --- completion ------\r\nfunction fromPosition(position) {\r\n    if (!position) {\r\n        return void 0;\r\n    }\r\n    return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\r\n}\r\nfunction toRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return new monaco.Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\r\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\r\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\r\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\r\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\r\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\r\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\r\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\r\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\r\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\r\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\r\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\r\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\r\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\r\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\r\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\r\n        case ls.CompletionItemKind.File: return mItemKind.File;\r\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\r\n    }\r\n    return mItemKind.Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n    if (!textEdit) {\r\n        return void 0;\r\n    }\r\n    return {\r\n        range: toRange(textEdit.range),\r\n        text: textEdit.newText\r\n    };\r\n}\r\nvar CompletionAdapter = /** @class */ (function () {\r\n    function CompletionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return [' ', ':'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doComplete(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var items = info.items.map(function (entry) {\r\n                var item = {\r\n                    label: entry.label,\r\n                    insertText: entry.insertText || entry.label,\r\n                    sortText: entry.sortText,\r\n                    filterText: entry.filterText,\r\n                    documentation: entry.documentation,\r\n                    detail: entry.detail,\r\n                    kind: toCompletionItemKind(entry.kind),\r\n                };\r\n                if (entry.textEdit) {\r\n                    item.range = toRange(entry.textEdit.range);\r\n                    item.insertText = entry.textEdit.newText;\r\n                }\r\n                if (entry.additionalTextEdits) {\r\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                isIncomplete: info.isIncomplete,\r\n                suggestions: items\r\n            };\r\n        });\r\n    };\r\n    return CompletionAdapter;\r\n}());\r\nexport { CompletionAdapter };\r\nfunction isMarkupContent(thing) {\r\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\r\n}\r\nfunction toMarkdownString(entry) {\r\n    if (typeof entry === 'string') {\r\n        return {\r\n            value: entry\r\n        };\r\n    }\r\n    if (isMarkupContent(entry)) {\r\n        if (entry.kind === 'plaintext') {\r\n            return {\r\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\r\n            };\r\n        }\r\n        return {\r\n            value: entry.value\r\n        };\r\n    }\r\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\r\n}\r\nfunction toMarkedStringArray(contents) {\r\n    if (!contents) {\r\n        return void 0;\r\n    }\r\n    if (Array.isArray(contents)) {\r\n        return contents.map(toMarkdownString);\r\n    }\r\n    return [toMarkdownString(contents)];\r\n}\r\n// --- hover ------\r\nvar HoverAdapter = /** @class */ (function () {\r\n    function HoverAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doHover(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            return {\r\n                range: toRange(info.range),\r\n                contents: toMarkedStringArray(info.contents)\r\n            };\r\n        });\r\n    };\r\n    return HoverAdapter;\r\n}());\r\nexport { HoverAdapter };\r\n// --- document highlights ------\r\nfunction toDocumentHighlightKind(kind) {\r\n    switch (kind) {\r\n        case ls.DocumentHighlightKind.Read: return monaco.languages.DocumentHighlightKind.Read;\r\n        case ls.DocumentHighlightKind.Write: return monaco.languages.DocumentHighlightKind.Write;\r\n        case ls.DocumentHighlightKind.Text: return monaco.languages.DocumentHighlightKind.Text;\r\n    }\r\n    return monaco.languages.DocumentHighlightKind.Text;\r\n}\r\nvar DocumentHighlightAdapter = /** @class */ (function () {\r\n    function DocumentHighlightAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findDocumentHighlights(resource.toString(), fromPosition(position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            return entries.map(function (entry) {\r\n                return {\r\n                    range: toRange(entry.range),\r\n                    kind: toDocumentHighlightKind(entry.kind)\r\n                };\r\n            });\r\n        });\r\n    };\r\n    return DocumentHighlightAdapter;\r\n}());\r\nexport { DocumentHighlightAdapter };\r\n// --- definition ------\r\nfunction toLocation(location) {\r\n    return {\r\n        uri: Uri.parse(location.uri),\r\n        range: toRange(location.range)\r\n    };\r\n}\r\nvar DefinitionAdapter = /** @class */ (function () {\r\n    function DefinitionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findDefinition(resource.toString(), fromPosition(position));\r\n        }).then(function (definition) {\r\n            if (!definition) {\r\n                return;\r\n            }\r\n            return [toLocation(definition)];\r\n        });\r\n    };\r\n    return DefinitionAdapter;\r\n}());\r\nexport { DefinitionAdapter };\r\n// --- references ------\r\nvar ReferenceAdapter = /** @class */ (function () {\r\n    function ReferenceAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findReferences(resource.toString(), fromPosition(position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            return entries.map(toLocation);\r\n        });\r\n    };\r\n    return ReferenceAdapter;\r\n}());\r\nexport { ReferenceAdapter };\r\n// --- rename ------\r\nfunction toWorkspaceEdit(edit) {\r\n    if (!edit || !edit.changes) {\r\n        return void 0;\r\n    }\r\n    var resourceEdits = [];\r\n    for (var uri in edit.changes) {\r\n        var edits = [];\r\n        for (var _i = 0, _a = edit.changes[uri]; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            edits.push({\r\n                range: toRange(e.range),\r\n                text: e.newText\r\n            });\r\n        }\r\n        resourceEdits.push({ resource: Uri.parse(uri), edits: edits });\r\n    }\r\n    return {\r\n        edits: resourceEdits\r\n    };\r\n}\r\nvar RenameAdapter = /** @class */ (function () {\r\n    function RenameAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    RenameAdapter.prototype.provideRenameEdits = function (model, position, newName, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doRename(resource.toString(), fromPosition(position), newName);\r\n        }).then(function (edit) {\r\n            return toWorkspaceEdit(edit);\r\n        });\r\n    };\r\n    return RenameAdapter;\r\n}());\r\nexport { RenameAdapter };\r\n// --- document symbols ------\r\nfunction toSymbolKind(kind) {\r\n    var mKind = monaco.languages.SymbolKind;\r\n    switch (kind) {\r\n        case ls.SymbolKind.File: return mKind.Array;\r\n        case ls.SymbolKind.Module: return mKind.Module;\r\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\r\n        case ls.SymbolKind.Package: return mKind.Package;\r\n        case ls.SymbolKind.Class: return mKind.Class;\r\n        case ls.SymbolKind.Method: return mKind.Method;\r\n        case ls.SymbolKind.Property: return mKind.Property;\r\n        case ls.SymbolKind.Field: return mKind.Field;\r\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\r\n        case ls.SymbolKind.Enum: return mKind.Enum;\r\n        case ls.SymbolKind.Interface: return mKind.Interface;\r\n        case ls.SymbolKind.Function: return mKind.Function;\r\n        case ls.SymbolKind.Variable: return mKind.Variable;\r\n        case ls.SymbolKind.Constant: return mKind.Constant;\r\n        case ls.SymbolKind.String: return mKind.String;\r\n        case ls.SymbolKind.Number: return mKind.Number;\r\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\r\n        case ls.SymbolKind.Array: return mKind.Array;\r\n    }\r\n    return mKind.Function;\r\n}\r\nvar DocumentSymbolAdapter = /** @class */ (function () {\r\n    function DocumentSymbolAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                name: item.name,\r\n                detail: '',\r\n                containerName: item.containerName,\r\n                kind: toSymbolKind(item.kind),\r\n                range: toRange(item.location.range),\r\n                selectionRange: toRange(item.location.range)\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentSymbolAdapter;\r\n}());\r\nexport { DocumentSymbolAdapter };\r\nvar DocumentColorAdapter = /** @class */ (function () {\r\n    function DocumentColorAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\r\n            if (!infos) {\r\n                return;\r\n            }\r\n            return infos.map(function (item) { return ({\r\n                color: item.color,\r\n                range: toRange(item.range)\r\n            }); });\r\n        });\r\n    };\r\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\r\n            if (!presentations) {\r\n                return;\r\n            }\r\n            return presentations.map(function (presentation) {\r\n                var item = {\r\n                    label: presentation.label,\r\n                };\r\n                if (presentation.textEdit) {\r\n                    item.textEdit = toTextEdit(presentation.textEdit);\r\n                }\r\n                if (presentation.additionalTextEdits) {\r\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n    return DocumentColorAdapter;\r\n}());\r\nexport { DocumentColorAdapter };\r\nvar FoldingRangeAdapter = /** @class */ (function () {\r\n    function FoldingRangeAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\r\n            if (!ranges) {\r\n                return;\r\n            }\r\n            return ranges.map(function (range) {\r\n                var result = {\r\n                    start: range.startLine + 1,\r\n                    end: range.endLine + 1\r\n                };\r\n                if (typeof range.kind !== 'undefined') {\r\n                    result.kind = toFoldingRangeKind(range.kind);\r\n                }\r\n                return result;\r\n            });\r\n        });\r\n    };\r\n    return FoldingRangeAdapter;\r\n}());\r\nexport { FoldingRangeAdapter };\r\nfunction toFoldingRangeKind(kind) {\r\n    switch (kind) {\r\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\r\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\r\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\r\n    }\r\n    return void 0;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js\n// module id = 1871\n// module chunks = 3","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\n// module id = 1872\n// module chunks = 3"],"sourceRoot":""}