{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/html/htmlMode.js","../node_modules/monaco-editor/esm/vs/language/html/workerManager.js","../node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js"],"names":["Object","defineProperty","__webpack_exports__","value","defaults","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerHoverProvider","registerDocumentHighlightProvider","registerLinkProvider","registerFoldingRangeProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","__webpack_require__","d","WorkerManager","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","options","label","getProxy","resources","then","_","withSyncedResources","DiagnosticsAdapter","CompletionAdapter","HoverAdapter","DocumentHighlightAdapter","DocumentSymbolAdapter","DocumentLinkAdapter","DocumentFormattingEditProvider","DocumentRangeFormattingEditProvider","FoldingRangeAdapter","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Range","_languageId","_disposables","_listener","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","getModels","forEach","key","resource","doValidation","diagnostics","markers","map","diag","code","String","severity","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","toDiagnostics","getModel","undefined","err","console","error","fromPosition","position","column","lineNumber","toRange","toTextEdit","textEdit","text","newText","get","enumerable","configurable","provideCompletionItems","context","token","doComplete","info","wordInfo","getWordUntilPosition","wordRange","items","entry","item","insertText","sortText","filterText","documentation","detail","kind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toCompletionItemKind","additionalTextEdits","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","isIncomplete","suggestions","toMarkdownString","thing","isMarkupContent","replace","language","provideHover","doHover","contents","Array","isArray","toMarkedStringArray","provideDocumentHighlights","findDocumentHighlights","mKind","DocumentHighlightKind","Read","Write","toHighlighKind","provideDocumentSymbols","findDocumentSymbols","name","containerName","SymbolKind","Namespace","Package","Constant","Number","Boolean","toSymbolKind","location","selectionRange","provideLinks","findDocumentLinks","url","target","fromFormattingOptions","tabSize","insertSpaces","provideDocumentFormattingEdits","format","edits","provideDocumentRangeFormattingEdits","getStartPosition","getEndPosition","fromRange","provideFoldingRanges","ranges","result","startLine","endLine","Comment","FoldingRangeKind","Imports","Region","toFoldingRangeKind","Position","Location","LocationLink","ColorInformation","ColorPresentation","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","InsertTextFormat","is","candidate","Is","objectLiteral","number","one","two","three","four","defined","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","typedArray","startCharacter","endCharacter","relatedInformation","title","command","args","insert","del","textDocument","VersionedTextDocumentIdentifier","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolInformation","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","textEditChange","keys","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","version","PlainText","Markdown","Folder","EnumMember","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","parameters","Key","Null","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","children","deprecated","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","only","commandOrEdit","data","DocumentLink","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","e","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check"],"mappings":"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","file":"static/js/4.5c29dfdc.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\n    monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js\n// module id = 912\n// module chunks = 4","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; });\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/workerManager.js\n// module id = 913\n// module chunks = 4","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var wordInfo = model.getWordUntilPosition(position);\n            var wordRange = new Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText || entry.label,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    range: wordRange,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                suggestions: items\n            };\n        });\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\n// --- hover ------\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        });\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- document highlights ------\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        });\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        });\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        });\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        });\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js\n// module id = 914\n// module chunks = 4","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\n// module id = 915\n// module chunks = 4"],"sourceRoot":""}