{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/json/jsonMode.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","../node_modules/monaco-editor/esm/vs/language/json/workerManager.js","../node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/json/tokenization.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js"],"names":["Object","defineProperty","__webpack_exports__","value","defaults","disposables","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","push","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","__WEBPACK_IMPORTED_MODULE_2__tokenization_js__","setLanguageConfiguration","richEditConfiguration","registerColorProvider","registerFoldingRangeProvider","__webpack_require__","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","isWhiteSpace","ch","isLineBreak","isDigit","text","ignoreTrivia","pos","len","tokenOffset","token","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","code","String","fromCharCode","result","start","substring","ch_1","scanString","safeLength","commentClosed","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","documentText","range","options","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","offset","isEOL","endOffset","content","i","nChars","tabSize","charAt","Math","floor","computeIndentLevel","indentValue","eol","getEOL","lineBreak","indentLevel","insertSpaces","repeat","scanner","__WEBPACK_IMPORTED_MODULE_0__scanner_js__","hasError","newLineAndIndent","editOperations","addEdit","startOffset","firstToken","firstTokenStart","initialIndent","firstTokenEnd","secondToken","replaceContent","commentTokenStart","secondTokenStart","s","indexOf","position","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","visit","onObjectBegin","onObjectProperty","name","onObjectEnd","pop","onArrayBegin","onArrayEnd","onLiteralValue","getLiteralNodeType","onSeparator","sep","last","e","path","matches","pattern","k","errors","ParseOptions","DEFAULT","currentProperty","currentParent","previousParents","onValue","Array","isArray","object","array","onError","error","children","ensurePropertyComplete","valueNode","root","node","path_1","segment","found","_a","_b","propertyNode","index","getNodePath","key","getNodeValue","map","obj","create","prop","findNodeAtOffset","includeRightBound","contains","item","replaceCh","kind","_scanner","parts","replace","join","visitor","toNoArgVisit","visitFunction","toOneArgVisit","arg","onComment","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","JSON","parse","parseLiteral","d","WorkerManager","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","createData","languageSettings","diagnosticsOptions","enableSchemaRequest","getProxy","resources","then","_","withSyncedResources","DiagnosticsAdapter","CompletionAdapter","HoverAdapter","DocumentSymbolAdapter","DocumentFormattingEditProvider","DocumentRangeFormattingEditProvider","DocumentColorAdapter","FoldingRangeAdapter","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Range","Uri","_languageId","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","event","getModels","forEach","resource","resetSchema","doValidation","diagnostics","markers","diag","severity","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","line","startColumn","character","endLineNumber","endColumn","message","source","toDiagnostics","getModel","undefined","err","console","fromPosition","column","lineNumber","fromRange","toRange","toTextEdit","textEdit","newText","get","enumerable","configurable","provideCompletionItems","context","doComplete","info","wordInfo","getWordUntilPosition","wordRange","items","entry","insertText","sortText","filterText","documentation","detail","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toCompletionItemKind","additionalTextEdits","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","isIncomplete","suggestions","toMarkdownString","thing","isMarkupContent","language","provideHover","doHover","contents","toMarkedStringArray","provideDocumentSymbols","findDocumentSymbols","containerName","mKind","SymbolKind","Namespace","Package","Constant","Number","Boolean","toSymbolKind","location","selectionRange","fromFormattingOptions","provideDocumentFormattingEdits","format","edits","provideDocumentRangeFormattingEdits","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","presentations","presentation","provideFoldingRanges","ranges","startLine","endLine","Comment","FoldingRangeKind","Imports","Region","toFoldingRangeKind","Position","Location","LocationLink","ColorInformation","ColorPresentation","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","InsertTextFormat","is","candidate","Is","objectLiteral","number","one","two","three","four","defined","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","typedArray","startCharacter","endCharacter","relatedInformation","title","command","args","insert","del","textDocument","VersionedTextDocumentIdentifier","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolInformation","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","textEditChange","keys","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","version","PlainText","Markdown","Folder","EnumMember","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","parameters","Read","Write","Key","Null","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","deprecated","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","only","commandOrEdit","data","DocumentLink","target","TextDocument","TextDocumentSaveReason","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","ret","a","b","diff","lastModifiedOffset","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","max","min","low","high","mid","lineOffset","nextLineOffset","call","check","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","numberOfInsertedCharacters","adjustOffset","__WEBPACK_IMPORTED_MODULE_0__deps_jsonc_parser_main_js__","lastWasColon","tokens","endState","clone","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","startIndex","scopes","_state","equals","other","setStateData","createScanner","__WEBPACK_IMPORTED_MODULE_2__impl_scanner_js__","__WEBPACK_IMPORTED_MODULE_3__impl_parser_js__","setProperty","applyEdit","__WEBPACK_IMPORTED_MODULE_0__format_js__","__WEBPACK_IMPORTED_MODULE_1__parser_js__","originalPath","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","withFormatting","stringify","newProperty","removalIndex","toRemove","begin","edit_1"],"mappings":"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","file":"static/js/1.a2f0adc3.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n    disposables.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js\n// module id = 1056\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var safeLength = len - 1; // For lookahead.\n                    var commentClosed = false;\n                    while (pos < safeLength) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js\n// module id = 1111\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=format.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js\n// module id = 1112\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: void 0\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: void 0 }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return void 0;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return void 0;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n//# sourceMappingURL=parser.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js\n// module id = 1113\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId,\n                    enableSchemaRequest: this._defaults.diagnosticsOptions.enableSchemaRequest\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; });\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/workerManager.js\n// module id = 1120\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model && model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var wordInfo = model.getWordUntilPosition(position);\n            var wordRange = new Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText || entry.label,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    range: wordRange,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                suggestions: items\n            };\n        });\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        });\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        });\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        });\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        });\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        });\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js\n// module id = 1121\n// module chunks = 1","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\n// module id = 1122\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/tokenization.js\n// module id = 1123\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ValueExpected */: return 'ValueExpected';\n        case 5 /* ColonExpected */: return 'ColonExpected';\n        case 6 /* CommaExpected */: return 'CommaExpected';\n        case 7 /* CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js\n// module id = 1124\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format.js';\nimport { parseTree, findNodeAtLocation } from './parser.js';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, originalPath, value, formattingOptions, getInsertionIndex) {\n    var _a;\n    var path = originalPath.slice();\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=edit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js\n// module id = 1125\n// module chunks = 1"],"sourceRoot":""}