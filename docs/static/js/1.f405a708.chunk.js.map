{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/json/jsonMode.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","../node_modules/monaco-editor/esm/vs/language/json/workerManager.js","../node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/json/tokenization.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js"],"names":["defaults","disposables","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","push","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","Object","__WEBPACK_IMPORTED_MODULE_2__tokenization_js__","setLanguageConfiguration","richEditConfiguration","registerColorProvider","registerFoldingRangeProvider","__webpack_require__","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","isWhiteSpace","ch","isLineBreak","isDigit","__webpack_exports__","text","ignoreTrivia","pos","len","value","tokenOffset","token","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","code","String","fromCharCode","result","start","substring","ch_1","scanString","commentClosed","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","documentText","range","options","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","offset","isEOL","endOffset","content","i","nChars","tabSize","charAt","Math","floor","computeIndentLevel","indentValue","eol","getEOL","lineBreak","indentLevel","insertSpaces","repeat","scanner","__WEBPACK_IMPORTED_MODULE_0__scanner_js__","hasError","newLineAndIndent","editOperations","addEdit","startOffset","firstToken","firstTokenStart","initialIndent","firstTokenEnd","secondToken","replaceContent","commentTokenStart","secondTokenStart","s","indexOf","position","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","visit","onObjectBegin","onObjectProperty","name","onObjectEnd","pop","onArrayBegin","onArrayEnd","onLiteralValue","getLiteralNodeType","onSeparator","sep","last","e","path","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","Array","isArray","object","array","onError","error","children","ensurePropertyComplete","valueNode","root","node","path_1","segment","found","_a","_b","propertyNode","index","getNodePath","key","getNodeValue","map","obj","create","prop","findNodeAtOffset","includeRightBound","contains","item","replaceCh","kind","_scanner","parts","replace","join","visitor","toNoArgVisit","visitFunction","toOneArgVisit","arg","onComment","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","JSON","parse","parseLiteral","d","WorkerManager","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","createData","languageSettings","diagnosticsOptions","enableSchemaRequest","getProxy","resources","then","_","withSyncedResources","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Range","Uri","DiagnosticsAdapter","_languageId","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","event","getModels","forEach","resource","resetSchema","doValidation","diagnostics","markers","diag","severity","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","line","startColumn","character","endLineNumber","endColumn","message","source","getModel","undefined","err","console","fromPosition","column","lineNumber","fromRange","toRange","toTextEdit","textEdit","newText","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","context","getWordUntilPosition","doComplete","info","items","entry","insertText","sortText","filterText","documentation","detail","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toCompletionItemKind","additionalTextEdits","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","isIncomplete","suggestions","toMarkdownString","thing","language","HoverAdapter","provideHover","doHover","contents","toMarkedStringArray","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","containerName","mKind","SymbolKind","Namespace","Package","Constant","Number","Boolean","toSymbolKind","location","selectionRange","fromFormattingOptions","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","edits","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","ranges","startLine","endLine","Comment","FoldingRangeKind","Imports","Region","toFoldingRangeKind","Position","Location","ColorInformation","ColorPresentation","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","is","candidate","Is","objectLiteral","number","one","two","three","four","defined","string","red","green","blue","alpha","typedArray","startCharacter","endCharacter","relatedInformation","title","command","args","insert","del","textDocument","VersionedTextDocumentIdentifier","changes","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolInformation","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","textDocumentEdit","textEditChange","keys","getTextEditChange","version","PlainText","Markdown","Folder","EnumMember","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","parameters","Read","Write","Key","Null","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","only","commandOrEdit","data","DocumentLink","target","TextDocument","TextDocumentSaveReason","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","ret","a","b","diff","lastModifiedOffset","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","max","min","low","high","mid","lineOffset","nextLineOffset","call","check","every","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","numberOfInsertedCharacters","adjustOffset","__WEBPACK_IMPORTED_MODULE_0__deps_jsonc_parser_main_js__","lastWasColon","tokens","endState","clone","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","startIndex","scopes","_state","equals","other","setStateData","__WEBPACK_IMPORTED_MODULE_3__impl_parser_js__","createScanner","__WEBPACK_IMPORTED_MODULE_2__impl_scanner_js__","__WEBPACK_IMPORTED_MODULE_1__parser_js__","setProperty","originalPath","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","withFormatting","stringify","newProperty","removalIndex","toRemove","applyEdit","begin","__WEBPACK_IMPORTED_MODULE_0__format_js__","edit_1"],"mappings":"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","file":"static/js/1.f405a708.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { WorkerManager } from './workerManager.js';\r\nimport * as languageFeatures from './languageFeatures.js';\r\nimport { createTokenizationSupport } from './tokenization.js';\r\nexport function setupMode(defaults) {\r\n    var disposables = [];\r\n    var client = new WorkerManager(defaults);\r\n    disposables.push(client);\r\n    var worker = function () {\r\n        var uris = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            uris[_i] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, uris);\r\n    };\r\n    var languageId = defaults.languageId;\r\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\r\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\r\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\r\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\r\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\r\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\r\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\r\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\r\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\r\n    disposables.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\r\n}\r\nvar richEditConfiguration = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string'] },\r\n        { open: '[', close: ']', notIn: ['string'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] }\r\n    ]\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js\n// module id = 1575\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js\n// module id = 1624\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=format.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js\n// module id = 1625\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: void 0\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: void 0 }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return void 0;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return void 0;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n//# sourceMappingURL=parser.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js\n// module id = 1626\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(defaults) {\r\n        var _this = this;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `JSONWorker` instance\r\n                moduleId: 'vs/language/json/jsonWorker',\r\n                label: this._defaults.languageId,\r\n                // passed in to the create() method\r\n                createData: {\r\n                    languageSettings: this._defaults.diagnosticsOptions,\r\n                    languageId: this._defaults.languageId,\r\n                    enableSchemaRequest: this._defaults.diagnosticsOptions.enableSchemaRequest\r\n                }\r\n            });\r\n            this._client = this._worker.getProxy();\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\nexport { WorkerManager };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/workerManager.js\n// module id = 1632\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\r\nvar Uri = monaco.Uri;\r\nvar Range = monaco.Range;\r\n// --- diagnostics --- ---\r\nvar DiagnosticsAdapter = /** @class */ (function () {\r\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\r\n        var _this = this;\r\n        this._languageId = _languageId;\r\n        this._worker = _worker;\r\n        this._disposables = [];\r\n        this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            var modeId = model.getModeId();\r\n            if (modeId !== _this._languageId) {\r\n                return;\r\n            }\r\n            var handle;\r\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\r\n            });\r\n            _this._doValidate(model.uri, modeId);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\r\n            var uriStr = model.uri.toString();\r\n            var listener = _this._listener[uriStr];\r\n            if (listener) {\r\n                listener.dispose();\r\n                delete _this._listener[uriStr];\r\n            }\r\n        };\r\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\r\n            onModelRemoved(model);\r\n            _this._resetSchema(model.uri);\r\n        }));\r\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n            _this._resetSchema(event.model.uri);\r\n        }));\r\n        this._disposables.push(defaults.onDidChange(function (_) {\r\n            monaco.editor.getModels().forEach(function (model) {\r\n                if (model.getModeId() === _this._languageId) {\r\n                    onModelRemoved(model);\r\n                    onModelAdd(model);\r\n                }\r\n            });\r\n        }));\r\n        this._disposables.push({\r\n            dispose: function () {\r\n                monaco.editor.getModels().forEach(onModelRemoved);\r\n                for (var key in _this._listener) {\r\n                    _this._listener[key].dispose();\r\n                }\r\n            }\r\n        });\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n    }\r\n    DiagnosticsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\r\n        this._worker().then(function (worker) {\r\n            worker.resetSchema(resource.toString());\r\n        });\r\n    };\r\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\r\n        this._worker(resource).then(function (worker) {\r\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\r\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\r\n                var model = monaco.editor.getModel(resource);\r\n                if (model.getModeId() === languageId) {\r\n                    monaco.editor.setModelMarkers(model, languageId, markers);\r\n                }\r\n            });\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    return DiagnosticsAdapter;\r\n}());\r\nexport { DiagnosticsAdapter };\r\nfunction toSeverity(lsSeverity) {\r\n    switch (lsSeverity) {\r\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\r\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\r\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\r\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\r\n        default:\r\n            return monaco.MarkerSeverity.Info;\r\n    }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\r\n    return {\r\n        severity: toSeverity(diag.severity),\r\n        startLineNumber: diag.range.start.line + 1,\r\n        startColumn: diag.range.start.character + 1,\r\n        endLineNumber: diag.range.end.line + 1,\r\n        endColumn: diag.range.end.character + 1,\r\n        message: diag.message,\r\n        code: code,\r\n        source: diag.source\r\n    };\r\n}\r\n// --- completion ------\r\nfunction fromPosition(position) {\r\n    if (!position) {\r\n        return void 0;\r\n    }\r\n    return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\r\n}\r\nfunction toRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\r\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\r\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\r\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\r\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\r\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\r\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\r\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\r\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\r\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\r\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\r\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\r\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\r\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\r\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\r\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\r\n        case ls.CompletionItemKind.File: return mItemKind.File;\r\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\r\n    }\r\n    return mItemKind.Property;\r\n}\r\nfunction fromCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\r\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\r\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\r\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\r\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\r\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\r\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\r\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\r\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\r\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\r\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\r\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\r\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\r\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\r\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\r\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\r\n        case mItemKind.File: return ls.CompletionItemKind.File;\r\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\r\n    }\r\n    return ls.CompletionItemKind.Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n    if (!textEdit) {\r\n        return void 0;\r\n    }\r\n    return {\r\n        range: toRange(textEdit.range),\r\n        text: textEdit.newText\r\n    };\r\n}\r\nvar CompletionAdapter = /** @class */ (function () {\r\n    function CompletionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return [' ', ':'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doComplete(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var items = info.items.map(function (entry) {\r\n                var item = {\r\n                    label: entry.label,\r\n                    insertText: entry.insertText || entry.label,\r\n                    sortText: entry.sortText,\r\n                    filterText: entry.filterText,\r\n                    documentation: entry.documentation,\r\n                    detail: entry.detail,\r\n                    kind: toCompletionItemKind(entry.kind),\r\n                };\r\n                if (entry.textEdit) {\r\n                    item.range = toRange(entry.textEdit.range);\r\n                    item.insertText = entry.textEdit.newText;\r\n                }\r\n                if (entry.additionalTextEdits) {\r\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                isIncomplete: info.isIncomplete,\r\n                suggestions: items\r\n            };\r\n        });\r\n    };\r\n    return CompletionAdapter;\r\n}());\r\nexport { CompletionAdapter };\r\nfunction isMarkupContent(thing) {\r\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\r\n}\r\nfunction toMarkdownString(entry) {\r\n    if (typeof entry === 'string') {\r\n        return {\r\n            value: entry\r\n        };\r\n    }\r\n    if (isMarkupContent(entry)) {\r\n        if (entry.kind === 'plaintext') {\r\n            return {\r\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\r\n            };\r\n        }\r\n        return {\r\n            value: entry.value\r\n        };\r\n    }\r\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\r\n}\r\nfunction toMarkedStringArray(contents) {\r\n    if (!contents) {\r\n        return void 0;\r\n    }\r\n    if (Array.isArray(contents)) {\r\n        return contents.map(toMarkdownString);\r\n    }\r\n    return [toMarkdownString(contents)];\r\n}\r\n// --- hover ------\r\nvar HoverAdapter = /** @class */ (function () {\r\n    function HoverAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doHover(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            return {\r\n                range: toRange(info.range),\r\n                contents: toMarkedStringArray(info.contents)\r\n            };\r\n        });\r\n    };\r\n    return HoverAdapter;\r\n}());\r\nexport { HoverAdapter };\r\n// --- definition ------\r\nfunction toLocation(location) {\r\n    return {\r\n        uri: Uri.parse(location.uri),\r\n        range: toRange(location.range)\r\n    };\r\n}\r\n// --- document symbols ------\r\nfunction toSymbolKind(kind) {\r\n    var mKind = monaco.languages.SymbolKind;\r\n    switch (kind) {\r\n        case ls.SymbolKind.File: return mKind.Array;\r\n        case ls.SymbolKind.Module: return mKind.Module;\r\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\r\n        case ls.SymbolKind.Package: return mKind.Package;\r\n        case ls.SymbolKind.Class: return mKind.Class;\r\n        case ls.SymbolKind.Method: return mKind.Method;\r\n        case ls.SymbolKind.Property: return mKind.Property;\r\n        case ls.SymbolKind.Field: return mKind.Field;\r\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\r\n        case ls.SymbolKind.Enum: return mKind.Enum;\r\n        case ls.SymbolKind.Interface: return mKind.Interface;\r\n        case ls.SymbolKind.Function: return mKind.Function;\r\n        case ls.SymbolKind.Variable: return mKind.Variable;\r\n        case ls.SymbolKind.Constant: return mKind.Constant;\r\n        case ls.SymbolKind.String: return mKind.String;\r\n        case ls.SymbolKind.Number: return mKind.Number;\r\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\r\n        case ls.SymbolKind.Array: return mKind.Array;\r\n    }\r\n    return mKind.Function;\r\n}\r\nvar DocumentSymbolAdapter = /** @class */ (function () {\r\n    function DocumentSymbolAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                name: item.name,\r\n                detail: '',\r\n                containerName: item.containerName,\r\n                kind: toSymbolKind(item.kind),\r\n                range: toRange(item.location.range),\r\n                selectionRange: toRange(item.location.range)\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentSymbolAdapter;\r\n}());\r\nexport { DocumentSymbolAdapter };\r\nfunction fromFormattingOptions(options) {\r\n    return {\r\n        tabSize: options.tabSize,\r\n        insertSpaces: options.insertSpaces\r\n    };\r\n}\r\nvar DocumentFormattingEditProvider = /** @class */ (function () {\r\n    function DocumentFormattingEditProvider(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\r\n                if (!edits || edits.length === 0) {\r\n                    return;\r\n                }\r\n                return edits.map(toTextEdit);\r\n            });\r\n        });\r\n    };\r\n    return DocumentFormattingEditProvider;\r\n}());\r\nexport { DocumentFormattingEditProvider };\r\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\r\n    function DocumentRangeFormattingEditProvider(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\r\n                if (!edits || edits.length === 0) {\r\n                    return;\r\n                }\r\n                return edits.map(toTextEdit);\r\n            });\r\n        });\r\n    };\r\n    return DocumentRangeFormattingEditProvider;\r\n}());\r\nexport { DocumentRangeFormattingEditProvider };\r\nvar DocumentColorAdapter = /** @class */ (function () {\r\n    function DocumentColorAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\r\n            if (!infos) {\r\n                return;\r\n            }\r\n            return infos.map(function (item) { return ({\r\n                color: item.color,\r\n                range: toRange(item.range)\r\n            }); });\r\n        });\r\n    };\r\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\r\n            if (!presentations) {\r\n                return;\r\n            }\r\n            return presentations.map(function (presentation) {\r\n                var item = {\r\n                    label: presentation.label,\r\n                };\r\n                if (presentation.textEdit) {\r\n                    item.textEdit = toTextEdit(presentation.textEdit);\r\n                }\r\n                if (presentation.additionalTextEdits) {\r\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n    return DocumentColorAdapter;\r\n}());\r\nexport { DocumentColorAdapter };\r\nvar FoldingRangeAdapter = /** @class */ (function () {\r\n    function FoldingRangeAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\r\n            if (!ranges) {\r\n                return;\r\n            }\r\n            return ranges.map(function (range) {\r\n                var result = {\r\n                    start: range.startLine + 1,\r\n                    end: range.endLine + 1\r\n                };\r\n                if (typeof range.kind !== 'undefined') {\r\n                    result.kind = toFoldingRangeKind(range.kind);\r\n                }\r\n                return result;\r\n            });\r\n        });\r\n    };\r\n    return FoldingRangeAdapter;\r\n}());\r\nexport { FoldingRangeAdapter };\r\nfunction toFoldingRangeKind(kind) {\r\n    switch (kind) {\r\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\r\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\r\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\r\n    }\r\n    return void 0;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js\n// module id = 1633\n// module chunks = 1","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.number(candidate.red)\n            && Is.number(candidate.green)\n            && Is.number(candidate.blue)\n            && Is.number(candidate.alpha);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * Enum of known range kinds\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n(function (MarkupKind) {\n    /**\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * Represents programming constructs like variables, classes, interfaces etc.\n * that appear in a document. Document symbols can be hierarchical and they\n * have two ranges: one that encloses its definition and one that points to\n * its most interesting range, e.g. the range of an identifier.\n */\nvar DocumentSymbol = /** @class */ (function () {\n    function DocumentSymbol() {\n    }\n    return DocumentSymbol;\n}());\nexport { DocumentSymbol };\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== void 0) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === void 0 || Array.isArray(candidate.children));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only) {\n        var result = { diagnostics: diagnostics };\n        if (only !== void 0 && only !== null) {\n            result.only = only;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, commandOrEdit, kind) {\n        var result = { title: title };\n        if (Command.is(commandOrEdit)) {\n            result.command = commandOrEdit;\n        }\n        else {\n            result.edit = commandOrEdit;\n        }\n        if (kind !== void null) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\n// module id = 1634\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport * as json from './_deps/jsonc-parser/main.js';\r\nexport function createTokenizationSupport(supportComments) {\r\n    return {\r\n        getInitialState: function () { return new JSONState(null, null, false); },\r\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\r\n    };\r\n}\r\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\r\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\r\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\r\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\r\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\r\nexport var TOKEN_VALUE_NULL = 'keyword.json';\r\nexport var TOKEN_VALUE_STRING = 'string.value.json';\r\nexport var TOKEN_VALUE_NUMBER = 'number.json';\r\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\r\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\r\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\r\nvar JSONState = /** @class */ (function () {\r\n    function JSONState(state, scanError, lastWasColon) {\r\n        this._state = state;\r\n        this.scanError = scanError;\r\n        this.lastWasColon = lastWasColon;\r\n    }\r\n    JSONState.prototype.clone = function () {\r\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\r\n    };\r\n    JSONState.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        if (!other || !(other instanceof JSONState)) {\r\n            return false;\r\n        }\r\n        return this.scanError === other.scanError &&\r\n            this.lastWasColon === other.lastWasColon;\r\n    };\r\n    JSONState.prototype.getStateData = function () {\r\n        return this._state;\r\n    };\r\n    JSONState.prototype.setStateData = function (state) {\r\n        this._state = state;\r\n    };\r\n    return JSONState;\r\n}());\r\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\r\n    if (offsetDelta === void 0) { offsetDelta = 0; }\r\n    // handle multiline strings and block comments\r\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\r\n    switch (state.scanError) {\r\n        case 2 /* UnexpectedEndOfString */:\r\n            line = '\"' + line;\r\n            numberOfInsertedCharacters = 1;\r\n            break;\r\n        case 1 /* UnexpectedEndOfComment */:\r\n            line = '/*' + line;\r\n            numberOfInsertedCharacters = 2;\r\n            break;\r\n    }\r\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\r\n    ret = {\r\n        tokens: [],\r\n        endState: state.clone()\r\n    };\r\n    while (true) {\r\n        var offset = offsetDelta + scanner.getPosition(), type = '';\r\n        kind = scanner.scan();\r\n        if (kind === 17 /* EOF */) {\r\n            break;\r\n        }\r\n        // Check that the scanner has advanced\r\n        if (offset === offsetDelta + scanner.getPosition()) {\r\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\r\n        }\r\n        // In case we inserted /* or \" character, we need to\r\n        // adjust the offset of all tokens (except the first)\r\n        if (adjustOffset) {\r\n            offset -= numberOfInsertedCharacters;\r\n        }\r\n        adjustOffset = numberOfInsertedCharacters > 0;\r\n        // brackets and type\r\n        switch (kind) {\r\n            case 1 /* OpenBraceToken */:\r\n                type = TOKEN_DELIM_OBJECT;\r\n                lastWasColon = false;\r\n                break;\r\n            case 2 /* CloseBraceToken */:\r\n                type = TOKEN_DELIM_OBJECT;\r\n                lastWasColon = false;\r\n                break;\r\n            case 3 /* OpenBracketToken */:\r\n                type = TOKEN_DELIM_ARRAY;\r\n                lastWasColon = false;\r\n                break;\r\n            case 4 /* CloseBracketToken */:\r\n                type = TOKEN_DELIM_ARRAY;\r\n                lastWasColon = false;\r\n                break;\r\n            case 6 /* ColonToken */:\r\n                type = TOKEN_DELIM_COLON;\r\n                lastWasColon = true;\r\n                break;\r\n            case 5 /* CommaToken */:\r\n                type = TOKEN_DELIM_COMMA;\r\n                lastWasColon = false;\r\n                break;\r\n            case 8 /* TrueKeyword */:\r\n            case 9 /* FalseKeyword */:\r\n                type = TOKEN_VALUE_BOOLEAN;\r\n                lastWasColon = false;\r\n                break;\r\n            case 7 /* NullKeyword */:\r\n                type = TOKEN_VALUE_NULL;\r\n                lastWasColon = false;\r\n                break;\r\n            case 10 /* StringLiteral */:\r\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\r\n                lastWasColon = false;\r\n                break;\r\n            case 11 /* NumericLiteral */:\r\n                type = TOKEN_VALUE_NUMBER;\r\n                lastWasColon = false;\r\n                break;\r\n        }\r\n        // comments, iff enabled\r\n        if (comments) {\r\n            switch (kind) {\r\n                case 12 /* LineCommentTrivia */:\r\n                    type = TOKEN_COMMENT_LINE;\r\n                    break;\r\n                case 13 /* BlockCommentTrivia */:\r\n                    type = TOKEN_COMMENT_BLOCK;\r\n                    break;\r\n            }\r\n        }\r\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\r\n        ret.tokens.push({\r\n            startIndex: offset,\r\n            scopes: type\r\n        });\r\n    }\r\n    return ret;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/tokenization.js\n// module id = 1635\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js\n// module id = 1636\n// module chunks = 1","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format.js';\nimport { parseTree, findNodeAtLocation } from './parser.js';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, originalPath, value, formattingOptions, getInsertionIndex) {\n    var path = originalPath.slice();\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n    var _a;\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=edit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js\n// module id = 1637\n// module chunks = 1"],"sourceRoot":""}