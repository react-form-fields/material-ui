{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/html/htmlMode.js","../node_modules/monaco-editor/esm/vs/language/html/workerManager.js","../node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js"],"names":["defaults","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerDocumentHighlightProvider","registerLinkProvider","registerFoldingRangeProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","__webpack_require__","d","__webpack_exports__","WorkerManager","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","options","label","getProxy","resources","then","_","withSyncedResources","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Range","DiagnosticsAdapter","_languageId","_disposables","_listener","Object","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","getModels","forEach","key","resource","doValidation","diagnostics","markers","map","diag","code","String","severity","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","toDiagnostics","getModel","undefined","err","console","error","fromPosition","position","column","lineNumber","toRange","toTextEdit","textEdit","text","newText","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","context","token","getWordUntilPosition","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","kind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toCompletionItemKind","additionalTextEdits","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","isIncomplete","suggestions","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","mKind","DocumentHighlightKind","Read","Write","toHighlighKind","DocumentLinkAdapter","provideLinks","findDocumentLinks","url","target","fromFormattingOptions","tabSize","insertSpaces","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","edits","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","getStartPosition","getEndPosition","fromRange","FoldingRangeAdapter","provideFoldingRanges","ranges","result","startLine","endLine","Comment","FoldingRangeKind","Imports","Region","toFoldingRangeKind","Position","Location","ColorInformation","ColorPresentation","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","is","value","candidate","Is","objectLiteral","number","one","two","three","four","defined","string","red","green","blue","alpha","color","typedArray","startCharacter","endCharacter","location","relatedInformation","title","command","args","replace","insert","del","textDocument","VersionedTextDocumentIdentifier","Array","isArray","changes","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","textDocumentEdit","textEditChange","keys","getTextEditChange","version","PlainText","Markdown","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","language","contents","parameters","Namespace","Package","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","selectionRange","children","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","only","commandOrEdit","data","DocumentLink","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","e","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check","every"],"mappings":"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","file":"static/js/2.56dfefa1.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { WorkerManager } from './workerManager.js';\r\nimport * as languageFeatures from './languageFeatures.js';\r\nexport function setupMode(defaults) {\r\n    var client = new WorkerManager(defaults);\r\n    var worker = function () {\r\n        var uris = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            uris[_i] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, uris);\r\n    };\r\n    var languageId = defaults.languageId;\r\n    // all modes\r\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\r\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\r\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\r\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\r\n    // only html\r\n    if (languageId === 'html') {\r\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\r\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\r\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js\n// module id = 1811\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(defaults) {\r\n        var _this = this;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `HTMLWorker` instance\r\n                moduleId: 'vs/language/html/htmlWorker',\r\n                // passed in to the create() method\r\n                createData: {\r\n                    languageSettings: this._defaults.options,\r\n                    languageId: this._defaults.languageId\r\n                },\r\n                label: this._defaults.languageId\r\n            });\r\n            this._client = this._worker.getProxy();\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\nexport { WorkerManager };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/workerManager.js\n// module id = 1873\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\r\nvar Range = monaco.Range;\r\n// --- diagnostics --- ---\r\nvar DiagnosticsAdapter = /** @class */ (function () {\r\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\r\n        var _this = this;\r\n        this._languageId = _languageId;\r\n        this._worker = _worker;\r\n        this._disposables = [];\r\n        this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            var modeId = model.getModeId();\r\n            if (modeId !== _this._languageId) {\r\n                return;\r\n            }\r\n            var handle;\r\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\r\n            });\r\n            _this._doValidate(model.uri, modeId);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\r\n            var uriStr = model.uri.toString();\r\n            var listener = _this._listener[uriStr];\r\n            if (listener) {\r\n                listener.dispose();\r\n                delete _this._listener[uriStr];\r\n            }\r\n        };\r\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\r\n            onModelRemoved(model);\r\n        }));\r\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n        }));\r\n        this._disposables.push(defaults.onDidChange(function (_) {\r\n            monaco.editor.getModels().forEach(function (model) {\r\n                if (model.getModeId() === _this._languageId) {\r\n                    onModelRemoved(model);\r\n                    onModelAdd(model);\r\n                }\r\n            });\r\n        }));\r\n        this._disposables.push({\r\n            dispose: function () {\r\n                for (var key in _this._listener) {\r\n                    _this._listener[key].dispose();\r\n                }\r\n            }\r\n        });\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n    }\r\n    DiagnosticsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\r\n        this._worker(resource).then(function (worker) {\r\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\r\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\r\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\r\n            });\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    return DiagnosticsAdapter;\r\n}());\r\nexport { DiagnosticsAdapter };\r\nfunction toSeverity(lsSeverity) {\r\n    switch (lsSeverity) {\r\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\r\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\r\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\r\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\r\n        default:\r\n            return monaco.MarkerSeverity.Info;\r\n    }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\r\n    return {\r\n        severity: toSeverity(diag.severity),\r\n        startLineNumber: diag.range.start.line + 1,\r\n        startColumn: diag.range.start.character + 1,\r\n        endLineNumber: diag.range.end.line + 1,\r\n        endColumn: diag.range.end.character + 1,\r\n        message: diag.message,\r\n        code: code,\r\n        source: diag.source\r\n    };\r\n}\r\n// --- completion ------\r\nfunction fromPosition(position) {\r\n    if (!position) {\r\n        return void 0;\r\n    }\r\n    return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\r\n}\r\nfunction toRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\r\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\r\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\r\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\r\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\r\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\r\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\r\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\r\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\r\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\r\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\r\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\r\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\r\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\r\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\r\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\r\n        case ls.CompletionItemKind.File: return mItemKind.File;\r\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\r\n    }\r\n    return mItemKind.Property;\r\n}\r\nfunction fromCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\r\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\r\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\r\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\r\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\r\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\r\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\r\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\r\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\r\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\r\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\r\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\r\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\r\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\r\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\r\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\r\n        case mItemKind.File: return ls.CompletionItemKind.File;\r\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\r\n    }\r\n    return ls.CompletionItemKind.Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n    if (!textEdit) {\r\n        return void 0;\r\n    }\r\n    return {\r\n        range: toRange(textEdit.range),\r\n        text: textEdit.newText\r\n    };\r\n}\r\nvar CompletionAdapter = /** @class */ (function () {\r\n    function CompletionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return ['.', ':', '<', '\"', '=', '/'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doComplete(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var items = info.items.map(function (entry) {\r\n                var item = {\r\n                    label: entry.label,\r\n                    insertText: entry.insertText || entry.label,\r\n                    sortText: entry.sortText,\r\n                    filterText: entry.filterText,\r\n                    documentation: entry.documentation,\r\n                    detail: entry.detail,\r\n                    kind: toCompletionItemKind(entry.kind),\r\n                };\r\n                if (entry.textEdit) {\r\n                    item.range = toRange(entry.textEdit.range);\r\n                    item.insertText = entry.textEdit.newText;\r\n                }\r\n                if (entry.additionalTextEdits) {\r\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                isIncomplete: info.isIncomplete,\r\n                suggestions: items\r\n            };\r\n        });\r\n    };\r\n    return CompletionAdapter;\r\n}());\r\nexport { CompletionAdapter };\r\nfunction isMarkupContent(thing) {\r\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\r\n}\r\nfunction toMarkdownString(entry) {\r\n    if (typeof entry === 'string') {\r\n        return {\r\n            value: entry\r\n        };\r\n    }\r\n    if (isMarkupContent(entry)) {\r\n        if (entry.kind === 'plaintext') {\r\n            return {\r\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\r\n            };\r\n        }\r\n        return {\r\n            value: entry.value\r\n        };\r\n    }\r\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\r\n}\r\nfunction toHighlighKind(kind) {\r\n    var mKind = monaco.languages.DocumentHighlightKind;\r\n    switch (kind) {\r\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\r\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\r\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\r\n    }\r\n    return mKind.Text;\r\n}\r\nvar DocumentHighlightAdapter = /** @class */ (function () {\r\n    function DocumentHighlightAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                range: toRange(item.range),\r\n                kind: toHighlighKind(item.kind)\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentHighlightAdapter;\r\n}());\r\nexport { DocumentHighlightAdapter };\r\nvar DocumentLinkAdapter = /** @class */ (function () {\r\n    function DocumentLinkAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                range: toRange(item.range),\r\n                url: item.target\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentLinkAdapter;\r\n}());\r\nexport { DocumentLinkAdapter };\r\nfunction fromFormattingOptions(options) {\r\n    return {\r\n        tabSize: options.tabSize,\r\n        insertSpaces: options.insertSpaces\r\n    };\r\n}\r\nvar DocumentFormattingEditProvider = /** @class */ (function () {\r\n    function DocumentFormattingEditProvider(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\r\n                if (!edits || edits.length === 0) {\r\n                    return;\r\n                }\r\n                return edits.map(toTextEdit);\r\n            });\r\n        });\r\n    };\r\n    return DocumentFormattingEditProvider;\r\n}());\r\nexport { DocumentFormattingEditProvider };\r\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\r\n    function DocumentRangeFormattingEditProvider(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\r\n                if (!edits || edits.length === 0) {\r\n                    return;\r\n                }\r\n                return edits.map(toTextEdit);\r\n            });\r\n        });\r\n    };\r\n    return DocumentRangeFormattingEditProvider;\r\n}());\r\nexport { DocumentRangeFormattingEditProvider };\r\nvar FoldingRangeAdapter = /** @class */ (function () {\r\n    function FoldingRangeAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\r\n            if (!ranges) {\r\n                return;\r\n            }\r\n            return ranges.map(function (range) {\r\n                var result = {\r\n                    start: range.startLine + 1,\r\n                    end: range.endLine + 1\r\n                };\r\n                if (typeof range.kind !== 'undefined') {\r\n                    result.kind = toFoldingRangeKind(range.kind);\r\n                }\r\n                return result;\r\n            });\r\n        });\r\n    };\r\n    return FoldingRangeAdapter;\r\n}());\r\nexport { FoldingRangeAdapter };\r\nfunction toFoldingRangeKind(kind) {\r\n    switch (kind) {\r\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\r\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\r\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\r\n    }\r\n    return void 0;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js\n// module id = 1874\n// module chunks = 2","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\n// module id = 1875\n// module chunks = 2"],"sourceRoot":""}