{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"names":["__webpack_require__","d","__webpack_exports__","language","conf","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","instructions","instructionAfter","variableAfter","variable","tokenizer","root","include","token","next","arguments","cases","@eos","@default","whitespace","comment","strings","stringBody","dblStringBody"],"mappings":"yIAAAA,EAAAC,EAAAC,EAAA,6BAAAC,IAKA,IAAAC,GACAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGTL,GACAO,aAAA,GACAC,aAAA,cACAC,aAAA,oHACAC,iBAAA,UACAC,cAAA,MACAC,SAAA,cACAC,WACAC,OACaC,QAAA,gBACAA,QAAA,aACb,uCAAsDC,MAAA,GAAAC,KAAA,oBACtD,+BAEAR,eACA,8CAA8DO,MAAA,WAAAC,KAAA,iBAC9D,2CAEAC,YACaH,QAAA,gBACAA,QAAA,aACb,eACAI,OACAC,QAAiCJ,MAAA,WAAAC,KAAA,WACjCI,WAAA,eAGA,MACAF,OACAC,OAAA,GACAC,WAAA,OAGA,KACAF,OACAC,QAAiCJ,MAAA,GAAAC,KAAA,WACjCI,WAAA,OAKAC,aACA,OACAH,OACAC,QAAiCJ,MAAA,GAAAC,KAAA,WACjCI,WAAA,OAIAE,UACA,gCAGAC,UACA,0BACA,6BACA,0BACA,gCAEAC,aACA,YACAN,OACAC,QAAiCJ,MAAA,SAAAC,KAAA,WACjCI,WAAA,aAGA,wBACA,0BACA,sBACA,2BACA,iBACA,yBAEAK,gBACA,YACAP,OACAC,QAAiCJ,MAAA,SAAAC,KAAA,WACjCI,WAAA,aAGA,wBACA,0BACA,sBACA,2BACA,iBACA","file":"static/js/44.0ca10eac.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.dockerfile',\r\n    instructions: /FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT/,\r\n    instructionAfter: /ONBUILD/,\r\n    variableAfter: /ENV/,\r\n    variable: /\\${?[\\w]+}?/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            [/(@instructionAfter)(\\s+)/, ['keyword', { token: '', next: '@instructions' }]],\r\n            ['', 'keyword', '@instructions']\r\n        ],\r\n        instructions: [\r\n            [/(@variableAfter)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\r\n            [/(@instructions)/, 'keyword', '@arguments']\r\n        ],\r\n        arguments: [\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [/(@variable)/, {\r\n                    cases: {\r\n                        '@eos': { token: 'variable', next: '@popall' },\r\n                        '@default': 'variable'\r\n                    }\r\n                }],\r\n            [/\\\\/, {\r\n                    cases: {\r\n                        '@eos': '',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            [/./, {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n        ],\r\n        // Deal with white space, including comments\r\n        whitespace: [\r\n            [/\\s+/, {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n        ],\r\n        comment: [\r\n            [/(^#.*$)/, 'comment', '@popall']\r\n        ],\r\n        // Recognize strings, including those broken across lines with \\ (but not without)\r\n        strings: [\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@stringBody'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/[^\\\\\\$']/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/\\\\./, 'string.escape'],\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ],\r\n        dblStringBody: [\r\n            [/[^\\\\\\$\"]/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ]\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js\n// module id = 1810\n// module chunks = 44"],"sourceRoot":""}